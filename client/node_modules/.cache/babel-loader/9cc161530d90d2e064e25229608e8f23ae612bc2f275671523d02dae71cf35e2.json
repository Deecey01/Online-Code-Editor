{"ast":null,"code":"var _jsxFileName = \"E:\\\\divyansh\\\\Online-Code-Editor\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport stubs from './defaultStubs';\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [language, setLanguage] = useState('cpp');\n  const [status, setStatus] = useState('');\n  const [jobId, setJobId] = useState('');\n  const [jobDetails, setJobDetails] = useState(null);\n  useEffect(() => {\n    const defaultLang = localStorage.getItem(\"default-language\") || \"py\";\n    setLanguage(defaultLang);\n  }, []);\n  useEffect(() => {\n    setCode(stubs[language]);\n  }, [language]);\n  const renderTimeDetails = () => {\n    if (!jobDetails) {\n      return \"\";\n    }\n    let {\n      submittedAt,\n      startedAt,\n      completedAt\n    } = jobDetails;\n    let result = \"\";\n    submittedAt = moment(submittedAt).toString();\n    result += `Job Submitted At: ${submittedAt}  `;\n    if (!startedAt || !completedAt) return result;\n    const start = moment(startedAt);\n    const end = moment(completedAt);\n    const diff = end.diff(start, \"seconds\", true);\n    result += `Execution Time: ${diff}s`;\n    return result;\n  };\n  const setDefaultLanguage = () => {\n    localStorage.setItem(\"default-language\", language);\n    console.log(`${language} set as default language`);\n  };\n  const handleSubmit = async () => {\n    const payload = {\n      language,\n      code\n    };\n    try {\n      setJobId(\"\");\n      setStatus(\"\");\n      setOutput(\"\");\n      const {\n        data\n      } = await axios.post(\"http://localhost:3030/run\", payload);\n      console.log(data);\n      setJobId(data.jobId);\n      let intervalId;\n      intervalId = setInterval(async () => {\n        const {\n          data: dataRes\n        } = await axios.get(\"http://localhost:3030/status\", {\n          params: {\n            id: data.jobId\n          }\n        });\n        const {\n          success,\n          job,\n          error\n        } = dataRes;\n        if (success) {\n          const {\n            status: jobStatus,\n            output: jobOutput\n          } = job;\n          setStatus(jobStatus);\n          setJobDetails(job);\n          if (jobStatus === \"pending\") return;\n          setOutput(jobOutput);\n          clearInterval(intervalId);\n        } else {\n          setStatus(\"Error: please retry\");\n          console.error(error);\n          setOutput(error);\n          clearInterval(intervalId);\n        }\n      }, 1000);\n    } catch ({\n      response\n    }) {\n      if (response) {\n        const errMsg = response.data.err.stderr;\n        setOutput(errMsg);\n      } else setOutput(\"Error connecting to the server\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Online Code Compiler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Language: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: language,\n        onChange: e => {\n          let response = window.confirm(\"WARNING: Switching the language, will remove your progress!\");\n          if (response) setLanguage(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cpp\",\n          children: \"C++\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"py\",\n          children: \"Python\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setDefaultLanguage,\n        children: \"Set Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"20\",\n      cols: \"75\",\n      value: code,\n      onChange: e => {\n        setCode(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: jobId && `JobID: ${jobId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: renderTimeDetails()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7/1G5qUKbC+JPCdcv5R6s9GF7Vw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","stubs","moment","jsxDEV","_jsxDEV","App","_s","code","setCode","output","setOutput","language","setLanguage","status","setStatus","jobId","setJobId","jobDetails","setJobDetails","defaultLang","localStorage","getItem","renderTimeDetails","submittedAt","startedAt","completedAt","result","toString","start","end","diff","setDefaultLanguage","setItem","console","log","handleSubmit","payload","data","post","intervalId","setInterval","dataRes","get","params","id","success","job","error","jobStatus","jobOutput","clearInterval","response","errMsg","err","stderr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","window","confirm","target","onClick","rows","cols","_c","$RefreshReg$"],"sources":["E:/divyansh/Online-Code-Editor/client/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport stubs from './defaultStubs';\nimport moment from \"moment\";\n\nfunction App() {\n  const [code, setCode] = useState('');\n  const [output, setOutput] = useState('');\n  const [language, setLanguage] = useState('cpp');\n  const [status, setStatus] = useState('');\n  const [jobId, setJobId] = useState('');\n  const [jobDetails, setJobDetails] = useState(null);\n\n  useEffect(() => {\n    const defaultLang = localStorage.getItem(\"default-language\") || \"py\";\n    setLanguage(defaultLang);\n  }, [])\n\n  useEffect(() => {\n    setCode(stubs[language]);\n  }, [language]);\n\n  const renderTimeDetails = () => {\n    if (!jobDetails) {\n      return \"\";\n    }\n    let { submittedAt, startedAt, completedAt } = jobDetails;\n    let result = \"\";\n    submittedAt = moment(submittedAt).toString();\n    result += `Job Submitted At: ${submittedAt}  `;\n    if (!startedAt || !completedAt) return result;\n    const start = moment(startedAt);\n    const end = moment(completedAt);\n    const diff = end.diff(start, \"seconds\", true);\n    result += `Execution Time: ${diff}s`;\n    return result;\n  };\n\n  const setDefaultLanguage = () => {\n    localStorage.setItem(\"default-language\", language);\n    console.log(`${language} set as default language`);\n  }\n\n  const handleSubmit = async () => {\n    const payload = {\n      language,\n      code\n    }\n    try {\n      setJobId(\"\");\n      setStatus(\"\");\n      setOutput(\"\");\n      const { data } = await axios.post(\"http://localhost:3030/run\", payload);\n      console.log(data);\n      setJobId(data.jobId);\n\n      let intervalId;\n\n      intervalId = setInterval(async () => {\n        const { data: dataRes } = await axios.get(\n          \"http://localhost:3030/status\",\n          { params: { id: data.jobId } }\n        );\n        const { success, job, error } = dataRes;\n        if (success) {\n          const { status: jobStatus, output: jobOutput } = job;\n          setStatus(jobStatus);\n          setJobDetails(job);\n          if (jobStatus === \"pending\") return;\n          setOutput(jobOutput);\n          clearInterval(intervalId);\n        } else {\n          setStatus(\"Error: please retry\");\n          console.error(error);\n          setOutput(error);\n          clearInterval(intervalId);\n        }\n      }, 1000)\n\n    } catch ({ response }) {\n      if (response) {\n        const errMsg = response.data.err.stderr;\n        setOutput(errMsg);\n      }\n      else setOutput(\"Error connecting to the server\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Online Code Compiler</h1>\n      <div>\n        <label>Language: </label>\n        <select\n          value={language}\n          onChange={(e) => {\n            let response = window.confirm(\n              \"WARNING: Switching the language, will remove your progress!\"\n            );\n            if (response) setLanguage(e.target.value);\n          }}>\n          <option value=\"cpp\">C++</option>\n          <option value=\"py\">Python</option>\n        </select>\n      </div>\n      <br />\n      <div>\n        <button onClick={setDefaultLanguage}>Set Default</button>\n      </div>\n      <br />\n      <textarea rows=\"20\" cols=\"75\" value={code} onChange={(e) => { setCode(e.target.value) }}>\n      </textarea>\n      <br />\n      <button onClick={handleSubmit}>Submit</button>\n      <p>{status}</p>\n      <p>{jobId && `JobID: ${jobId}`}</p>\n      <p>{renderTimeDetails()}</p>\n      <p>{output}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}